{"version":3,"file":"static/js/342.367f7c40.chunk.js","mappings":"qKAIe,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoBC,IACxBH,EAASG,IAGX,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAE7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,QACEF,UAAU,+CACVG,QAASA,IAAMN,EAAiB,YAAYI,SAC7C,+BAMHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAAC,uCAG/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAGfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDC,EAAAA,EAAAA,KAAA,OACEE,IAAKC,EACLC,IAAI,gBACJN,UAAU,qCAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,kBAAiBC,SAAA,CAAC,kBACfC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sCAA0C,6HAEf,KACjDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAkB,MAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAA0B,IAAC,KAC9DC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAmB,MAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAiB,IAAC,KACtDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAkB,UAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAuB,QAEhEF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,kBAAiBC,SAAA,CAAC,6BACJC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,8BAAkC,qEAGrEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0CAENF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,kBAAiBC,SAAA,CAAC,yGAEMC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,OAAK,KAClEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAAmB,uHAQjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,gBAC7BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4CACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gEAKRC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDC,EAAAA,EAAAA,KAAA,UACEF,UAAU,4BACVG,QAASA,IAAMN,EAAiB,YAAYI,SAC7C,yBAMT,C","sources":["components/pages/project/project-details/tms-project.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport project1 from \"../../../../assets/project1.png\";\r\nimport \"./tms-project.scss\";\r\n\r\nexport default function TmsProject() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigation = (path: string) => {\r\n    navigate(path);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-details container py-5\">\r\n      {/* Back Navigation */}\r\n      <div className=\"row mb-4\">\r\n        <span\r\n          className=\"back-navigation d-flex justify-content-start\"\r\n          onClick={() => handleNavigation(\"/project\")}\r\n        >\r\n          ‚Üê Back to Projects\r\n        </span>\r\n      </div>\r\n\r\n      {/* Title */}\r\n      <h2 className=\"text-center project-title mb-3\">\r\n        Transport Management System (TMS)\r\n      </h2>\r\n      <div className=\"underline mb-5\"></div>\r\n\r\n      {/* Description Section */}\r\n      <div className=\"project-content d-flex flex-column flex-md-row align-items-center mb-5\">\r\n        <div className=\"project-image mb-4 mb-md-0 me-md-5\">\r\n          <img\r\n            src={project1}\r\n            alt=\"TMS Dashboard\"\r\n            className=\"img-fluid rounded-3 shadow-sm\"\r\n          />\r\n        </div>\r\n        <div className=\"project-text\">\r\n          <p className=\"text-muted fs-5\">\r\n            I worked on a <strong>Transport Management System (TMS)</strong> for\r\n            a 3PL logistics platform that helps manage transportation operations\r\n            efficiently. The system handles entities such as{\" \"}\r\n            <strong>carriers</strong>, <strong>bill-to accounts</strong>,{\" \"}\r\n            <strong>customers</strong>, <strong>tenants</strong>,{\" \"}\r\n            <strong>accounts</strong>, and <strong>logistic plans</strong>.\r\n          </p>\r\n          <p className=\"text-muted fs-5\">\r\n            My primary role was as a <strong>.NET Full Stack Developer</strong>.\r\n            I contributed to the development of major modules including:\r\n          </p>\r\n          <ul className=\"text-muted fs-6\">\r\n            <li>Product Management</li>\r\n            <li>Contract Management</li>\r\n            <li>Rating and Pricing Modules</li>\r\n            <li>End-to-End Order Flow (from placement to delivery)</li>\r\n            <li>Order Tracking and Tendering</li>\r\n            <li>Exception Handling and Resolution</li>\r\n          </ul>\r\n          <p className=\"text-muted fs-5\">\r\n            I developed multiple frontend screens in React and Bootstrap, and\r\n            implemented backend services using <strong>.NET Core</strong> and{\" \"}\r\n            <strong>PostgreSQL</strong>. The architecture followed a clean\r\n            domain-driven approach with event sourcing for tracking state\r\n            changes.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tech Stack Section */}\r\n      <div className=\"tech-stack my-5\">\r\n        <h4 className=\"fw-bold mb-3\">Tech Stack</h4>\r\n        <ul className=\"text-muted fs-6\">\r\n          <li>Frontend: React, TypeScript, Bootstrap</li>\r\n          <li>Backend: .NET Core, C#, Marten (Event Sourcing), PostgreSQL</li>\r\n          <li>Other Tools: AutoMapper, Swagger, OpenAI Integration</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Navigation Buttons */}\r\n      <div className=\"d-flex justify-content-center mt-5\">\r\n        <button\r\n          className=\"btn btn-outline-dark px-4\"\r\n          onClick={() => handleNavigation(\"/project\")}\r\n        >\r\n          Back to Projects\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["TmsProject","navigate","useNavigate","handleNavigation","path","_jsxs","className","children","_jsx","onClick","src","project1","alt"],"sourceRoot":""}